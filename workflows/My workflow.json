{
  "active": false,
  "connections": {
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Transcript": {
      "main": [
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Youtube Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Get YouTube URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Concatenate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get YouTube URL": {
      "main": [
        [
          {
            "node": "YouTube Video ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Video ID": {
      "main": [
        [
          {
            "node": "Get YouTube Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize & Analyze Transcript": {
      "main": [
        [
          {
            "node": "Response Object",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concatenate": {
      "main": [
        [
          {
            "node": "Summarize & Analyze Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response Object": {
      "main": [
        []
      ]
    },
    "Get YouTube Video": {
      "main": [
        [
          {
            "node": "Youtube Transcript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Transcript1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize & Analyze Transcript",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-23T17:36:12.454Z",
  "id": "oq4RmbEIskRZnB2J",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        360,
        0
      ],
      "id": "222f7e01-de6a-4d83-8e19-f03334ac964b",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "llama3.1:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        340,
        240
      ],
      "id": "a1ced50a-baf5-4fd3-aa2e-346b344bdb8e",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "RVEpr4DpMNzTk6hF",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1165886644780544020",
          "mode": "list",
          "cachedResultName": "Home Ai",
          "cachedResultUrl": "https://discord.com/channels/1165886644780544020"
        },
        "channelId": {
          "__rl": true,
          "value": "1165886645569064972",
          "mode": "list",
          "cachedResultName": "general",
          "cachedResultUrl": "https://discord.com/channels/1165886644780544020/1165886645569064972"
        },
        "content": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        780,
        -140
      ],
      "id": "ff69e284-8a82-49b8-abdb-e46fa5b6370b",
      "name": "Discord",
      "webhookId": "17059f62-3f53-4638-942c-a73a6d47116d",
      "credentials": {
        "discordBotApi": {
          "id": "oDeCDLQh2A6pcbLX",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "guildIds": [
          "1165886644780544020"
        ],
        "channelIds": [
          "1165886645569064972"
        ],
        "pattern": "every",
        "additionalFields": {}
      },
      "type": "n8n-nodes-discord-trigger.discordTrigger",
      "typeVersion": 1,
      "position": [
        -360,
        -180
      ],
      "id": "351c55c8-7e62-444b-844c-1ef877efe521",
      "name": "Discord Trigger",
      "credentials": {
        "discordBotTriggerApi": {
          "id": "4LZYpA4U01jfdp2d",
          "name": "Discord Bot Trigger account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-youtube-transcript.youtubeTranscriptNode",
      "typeVersion": 1,
      "position": [
        220,
        -260
      ],
      "id": "a845c7dc-0154-43b5-85a3-530d0d1e4b12",
      "name": "Youtube Transcript"
    },
    {
      "parameters": {
        "language": "python"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        -180
      ],
      "id": "a82853cf-54c1-46a5-9831-aae890d7bee5",
      "name": "Code"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ytube",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "323c42f6-31f9-4433-bb95-46147c3c4283",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -400,
        580
      ],
      "webhookId": "9024e29e-9080-4cf5-9a6b-0d918468f195",
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "33cf3683-55e9-4dbc-b551-7f3ce5cebaa4",
      "name": "YouTube Transcript",
      "type": "n8n-nodes-youtube-transcription.youtubeTranscripter",
      "position": [
        480,
        380
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "transcript",
        "options": {}
      },
      "id": "2367eeae-bc1c-47fe-bddd-305c6287b3c7",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -200,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3ee42e4c-3cee-4934-97e7-64c96b5691ed",
              "name": "youtubeUrl",
              "type": "string",
              "value": "={{ $json.body.youtubeUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5941a20c-b29f-4bd6-bc2c-633ae2aa616a",
      "name": "Get YouTube URL",
      "type": "n8n-nodes-base.set",
      "position": [
        -200,
        580
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const extractYoutubeId = (url) => {\n  // Regex pattern that matches both youtu.be and youtube.com URLs\n  const pattern = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n  const match = url.match(pattern);\n  return match ? match[1] : null;\n};\n\n// Input URL from previous node\nconst youtubeUrl = items[0].json.youtubeUrl; // Adjust this based on your workflow\n\n// Process the URL and return the video ID\nreturn [{\n  json: {\n    videoId: extractYoutubeId(youtubeUrl)\n  }\n}];\n"
      },
      "id": "ce21c72e-c971-489e-812f-bc01d7d52605",
      "name": "YouTube Video ID",
      "type": "n8n-nodes-base.code",
      "position": [
        0,
        580
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "get",
        "videoId": "={{ $json.videoId }}",
        "options": {}
      },
      "id": "b4260ec9-7fc2-482d-b705-f7f6eb549cca",
      "name": "Get YouTube Video",
      "type": "n8n-nodes-base.youTube",
      "position": [
        200,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Please analyze the given text and create a structured summary following these guidelines:\n\n1. Break down the content into main topics using Level 2 headers (##)\n2. Under each header:\n   - List only the most essential concepts and key points\n   - Use bullet points for clarity\n   - Keep explanations concise\n   - Preserve technical accuracy\n   - Highlight key terms in bold\n3. Organize the information in this sequence:\n   - Definition/Background\n   - Main characteristics\n   - Implementation details\n   - Advantages/Disadvantages\n4. Format requirements:\n   - Use markdown formatting\n   - Keep bullet points simple (no nesting)\n   - Bold important terms using **term**\n   - Use tables for comparisons\n   - Include relevant technical details\n\nPlease provide a clear, structured summary that captures the core concepts while maintaining technical accuracy.\n\nHere is the text: {{ $json.concatenated_text\n }}"
      },
      "id": "fac82bd9-d557-4bf7-8212-ccc5aaad0f4f",
      "name": "Summarize & Analyze Transcript",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        200,
        840
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "text",
              "separateBy": " "
            }
          ]
        },
        "options": {}
      },
      "id": "d36bac22-7e1d-4430-bc99-7cc6a884fc35",
      "name": "Concatenate",
      "type": "n8n-nodes-base.summarize",
      "position": [
        0,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bf132004-6636-411f-9d85-0c696fda84c4",
              "name": "summary",
              "type": "string",
              "value": "={{ $json.text }}"
            },
            {
              "id": "63c8d0e3-685c-488a-9b45-363cf52479ea",
              "name": "topics",
              "type": "array",
              "value": "=[]"
            },
            {
              "id": "171f30cf-34e9-42f3-8735-814024bfde0b",
              "name": "title",
              "type": "string",
              "value": "={{ $('Get YouTube Video').item.json.snippet.title }}"
            },
            {
              "id": "7f26f5a3-e695-49d1-b1e8-9260c31f1b3d",
              "name": "description",
              "type": "string",
              "value": "={{ $('Get YouTube Video').item.json.snippet.description }}"
            },
            {
              "id": "d0594232-cb39-453c-b015-3b039c098e1f",
              "name": "id",
              "type": "string",
              "value": "={{ $('Get YouTube Video').item.json.id }}"
            },
            {
              "id": "17b6ca08-ce89-4467-bd25-0d2d182f7a8b",
              "name": "youtubeUrl",
              "type": "string",
              "value": "={{ $('Webhook').item.json.body.youtubeUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5247dd69-c9a6-4a47-9fec-91f8d8a004f4",
      "name": "Response Object",
      "type": "n8n-nodes-base.set",
      "position": [
        560,
        840
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {},
      "type": "n8n-nodes-youtube-transcript.youtubeTranscriptNode",
      "typeVersion": 1,
      "position": [
        460,
        580
      ],
      "id": "a5cd1848-be08-4a36-9d03-753aa6ea0372",
      "name": "Youtube Transcript1"
    },
    {
      "parameters": {
        "model": "llama3.1:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        300,
        1060
      ],
      "id": "dcef9363-9df6-4e10-8fab-2b77f9e0e4c4",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "RVEpr4DpMNzTk6hF",
          "name": "Ollama account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-04-04T12:48:56.759Z",
  "versionId": "31c4f28f-1337-49c1-a91c-7dc1d458fa8b"
}